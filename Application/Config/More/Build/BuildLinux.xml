<?xml version="1.0" encoding="UTF-8"?>
<project
    name="{APPLICATION_NAME}"
    default="Build"
    xmlns:if="ant:if"
    xmlns:unless="ant:unless"
>

    <property name="phpFolder" value="/usr/php"/>
    <property name="dblejFolder" value="{DEV_LOCAL_ROOT}/{RELATIVE_DBLEJ_FOLDER}"/>
    <property name="waflFolder" value="{DEV_LOCAL_ROOT}/{RELATIVE_WAFL_FOLDER}"/>
    <property name="appFolder" value="{DEV_LOCAL_ROOT}"/>

    <!-- if using jenkins -->
    <!-- property environment="env"/ -->
    <!-- property name="workspace" value="${env.WORKSPACE}" / -->
    <!-- property name="jobname" value="${env.JOB_NAME}" / -->
    <!-- property name="buildid" value="${env.BUILD_ID}" / -->

    <!-- if not using jenkins -->
    <property name="workspace" value="${appFolder}/Workspace"/>
    <property name="jobname" value="Demo App Windows Build" />
    <property name="buildid" value="Build1" />


    <target name="AggregateBuildReports" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb" dir="${phpFolder}"> <!-- you'll need to create a file that calls php phpcb.phar -->
            <arg value="--log" />
            <arg path="${workspace}/BuildOutput" />
            <arg value="--source" />
            <arg path="${appFolder}" />
            <arg value="--output" />
            <arg path="${workspace}/BuildOutput/CodeBrowser" />
        </exec>
    </target>
	
    <target name="Build"
            depends="PrepareBuild,CheckPhpSyntax,MeasureProjectSize,CalculatePhpCodeQuality,DetectPhpMesses,ValidatePhpCodingStandard,DetectDuplicatePhpCode,RunDatabaseUpdates,RunUnitTests,AggregateBuildReports"/>
	
    <target name="CalculatePhpCodeQuality" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend" dir="${phpFolder}">
            <arg value="--jdepend-xml=${workspace}/BuildOutput/AppMetrics.xml" />
            <arg value="--jdepend-chart=${workspace}/BuildOutput/AppMetricsChart.svg" />
            <arg value="--overview-pyramid=${workspace}/BuildOutput/OverviewPyramidChart.svg" />
            <arg path="${appFolder}" />
        </exec>
    </target>

    <target name="CheckPhpSyntax" depends="PrepareBuild" description="Perform syntax check of sourcecode files">
        <echo>Checking syntax for ${basedir} /App and /Tests with php -l...</echo>
        <apply executable="php" failonerror="true">
            <arg value="-l" />
            <fileset dir="${appFolder}">
                <include name="**/*.php" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="Clean" description="Cleanup build artifacts">
        <echo message="Deleting workspace folders from previous build..."/>
        <delete dir="${workspace}"/>
    </target>
	
    <target name="DetectDuplicatePhpCode" description="Find duplicate code using phpcpd">
        <exec executable="phpcpd" dir="${phpFolder}">
            <arg value="--log-pmd" />
            <arg value="${workspace}/BuildOutput/DuplicateCodeReport.xml" />
            <arg path="${appFolder}" />
        </exec>
    </target>

    <target name="DetectPhpMesses" description="Perform project mess detection using phpmd creating a log file for the continuous integration server">
        <exec executable="phpmd" dir="${phpFolder}">
            <arg path="${appFolder}" />
            <arg value="xml" />
            <arg path="${waflFolder}/CodingStandards/Wafl1Md/ruleset.xml" />
            <arg value="--reportfile" />
            <arg path="${workspace}/BuildOutput/MessDetectionLog.xml" />
        </exec>
    </target>
	
    <target name="MeasureProjectSize" description="Measure project size using phploc">
        <echo>Running phploc to get project size...</echo>
        <exec executable="phploc" dir="${phpFolder}"> <!-- you'll need to create a  file that calls php phpcb.phar -->
            <arg value="--log-csv" />
            <arg path="${workspace}/BuildOutput/ProjectSizeReport.csv" />
            <arg path="${appFolder}" />
        </exec>
    </target>
	
    <target name="PrepareBuild" depends="Clean" description="Prepare for the build">
        <echo message="Creating workspace folders needed for build..."/>
        <mkdir dir="${workspace}"/>
        <mkdir dir="${workspace}/BuildOutput"/>
    </target>

    <target name="RunDatabaseUpdates" description="Run database updates">
        <exec dir="${waflFolder}/Bin" executable="php" failonerror="true">
            <env key="WAFL_ENVIRONMENT" value="build" />
            <arg line='DeployDatabaseChanges AppRoot="${appFolder}/" WaflEnvironment="build"' />
        </exec>
    </target>
	
    <target name="RunIntegrationTests" description="Run integration tests with PHPUnit">
        <echo message="Starting Xvfb..." />
        <exec dir="${waflFolder}/Extensions/Selenium" executable="Xvfb" spawn="true">
            <env key="DISPLAY" value=":10" />
            <arg line=':10 -ac' />
        </exec>
        <echo message="Waiting for Xvfb to finish starting..." />
        <sleep seconds="5"/>
        <echo message="Starting Selenium Server..." />
        <exec dir="${waflFolder}/Extensions/Selenium" executable="java" spawn="true">
            <env key="DISPLAY" value=":10" />
            <arg line='-jar selenium-server-standalone-2.40.0.jar' />
        </exec>
        <echo message="Waiting for Selenium Server to finish starting..." />
        <sleep seconds="5"/>
        <echo message="Starting phpunit..." />
        <exec dir="${phpFolder}" executable="phpunit" failonerror="true">
            <env key="WAFL_ENVIRONMENT" value="build" />
            <env key="DISPLAY" value=":10" />
            <arg line='--bootstrap="${appFolder}/{APPLICATION_NAMESPACE}/Tests/Bootstrap.php"' />
            <arg path="./*" />
        </exec>
        <echo message="done" />
    </target>
	
    <target name="RunUnitTests" description="Run unit tests with PHPUnit">
        <apply executable="phpunit" dir="${phpFolder}" parallel="true">
            <env key="WAFL_ENVIRONMENT" value="build" />
            <arg line="--configuration" />
            <arg path="${appFolder}/Config/More/Build/PhpUnit.xml" />
            <fileset dir="${appFolder}/{APPLICATION_NAMESPACE}/Tests/Unit" includes="*.php"/>
        </apply>
        <echo message="done" />
    </target>
	
    <target name="ValidatePhpCodingStandard" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" dir="${phpFolder}">
            <arg value="-v" />
            <arg value="--report=checkstyle" />
            <arg value='--report-file="${workspace}/BuildOutput/CodeStandardViolations.xml"' />
            <arg value='--standard="${waflFolder}/CodingStandards/Wafl1/ruleset.xml"' />
            <arg path="${appFolder}/{APPLICATION_NAMESPACE}" />
        </exec>
    </target>

</project>